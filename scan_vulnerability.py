import urllib.request, urllib.error, urllib.parse
from bs4 import BeautifulSoup
import pprint
import requests

# 사이트 보안 취약점 스캔 Ex: admin.php SSL 인증서 등
# webvulnerscan // reference: https://github.com/Dk20/WebVulnerabilityScanner
def vulnerscan(url: str) -> list:
    result = []
    result.append("Vulner Scanning...")
    try:
        page=urllib.request.urlopen(url)
        parts = url.split("/")
        result.append(parts[-1])
        if (parts[-1]=="admin"):
            result.append("Admin label vulnerability!!")
        elif (parts[-1]=="login"):
            result.append("Login label vulnerability!!")
        else :
            soup = BeautifulSoup(page,"html.parser")
            for form in soup.findAll('form'):
                result.append("Form Method: "+form.get('method'))
                if(form.get('method')=='GET' or form.get('method')=='get'):
                    result.append("request sent via get method... data Vulnerable!!!")
            try:
                result=requests.get(url+"'")
                result.append("On preliminary sql injection status code : " + str(result.status_code))
                result.append("On preliminary sql injection response header from server : ")
                result.append(pprint.pformat(result.headers,width=1,indent=3))
                result.append('')
                a=[404,500,408,302]
                if(result.status_code in a):
                    result.append("Wow! I think this site is vulnerable. Partial or 100% injection attacks are possible")
            except:
                result.append("Request denied, This page is safe...... :-)")
    except:
        result.append("This site does not have an ssl certificate... Vulnerable!!!")
        result.append("Exiting..........")
    return result

def main():
    print(vulnerscan("https://www.bellsoft.net/"))

if __name__ == "__main__":
    main()